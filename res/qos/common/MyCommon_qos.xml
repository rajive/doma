<?xml version="1.0"?>
<!--  
#******************************************************************************
#   Copyright 2019 Rajive Joshi, Real-Time Innovations Inc.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#******************************************************************************
-->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="/opt/rti/NDDSHOME/resource/schema/rti_dds_qos_profiles.xsd">

    <qos_library name="SnippetQosLib">
        <!-- QoS Snippets DON'T have a base_name attribute -->

        <qos_profile name="InstanceKeepLastValue">
            <datawriter_qos>
                <history>
                    <!-- data + dispose + unregister -->
                    <depth>3</depth>
                </history>
            </datawriter_qos>
            <datareader_qos>
                <history>
                    <depth>1</depth>
                </history>
            </datareader_qos>
        </qos_profile>

    </qos_library>


    <qos_library name="MyCommonQosLib">

        <!-- Generic -->
        <qos_profile name="Generic"
            base_name="BuiltinQosLib::Generic.Common" />

        <!-- Logging -->
        <qos_profile name="Logging"
            base_name="BuiltinQosLibExp::Generic.StrictReliable">
            <datawriter_qos>
                <history>
                    <!-- don't block the writer -->
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>3</depth>
                </history>
            </datawriter_qos>
        </qos_profile>

        <!-- Configuration -->
        <qos_profile name="Configuration"
            base_name="BuiltinQosLibExp::Pattern.LastValueCache">
            <base_name>
                <element>SnippetQosLib::InstanceKeepLastValue</element>
            </base_name>
        </qos_profile>

        <!-- State -->
        <qos_profile name="State"
            base_name="BuiltinQosLibExp::Pattern.Status" />

        <!-- Status: monitored, but not acted upon, e.g. Health -->
        <qos_profile name="Status"
            base_name="BuiltinQosLibExp::Pattern.Status" />


        <!-- Data Streams -->
        <qos_profile name="Streaming.BestEffort"
            base_name="BuiltinQosLibExp::Generic.BestEffort">
            <datawriter_qos>
                <history>
                    <depth>3</depth>
                </history>
            </datawriter_qos>
            <datareader_qos>
                <history>
                    <depth>3</depth>
                </history>
            </datareader_qos>
        </qos_profile>

        <qos_profile name="Streaming.Reliable"
            base_name="BuiltinQosLibExp::Pattern.ReliableStreaming">
            <datawriter_qos>
                <history>
                    <depth>3</depth>
                </history>
            </datawriter_qos>
            <datareader_qos>
                <history>
                    <depth>3</depth>
                </history>
            </datareader_qos>
        </qos_profile>


        <!-- Command-Response (Objective State) -->
        <qos_profile name="Command" 
            base_name="BuiltinQosLibExp::Generic.StrictReliable" >
            <!-- Requested Objective -->
            <datawriter_qos>
                <history>
                    <!-- don't block the writer -->
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <!-- one command (Requested Objective) outstanding -->
                    <depth>3</depth>
                </history>
            </datawriter_qos>
            <datareader_qos>
                <!-- KEEP_ALL history: don't drop any requests -->
            </datareader_qos>
        </qos_profile>

        <qos_profile name="Response" base_name="Command">
            <!-- Objective -->
            <datawriter_qos>
                <history>
                    <!-- don't block the writer -->
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <!-- N responses (Objectives) outstanding -->
                    <depth><!-- N = -->3</depth>
                </history>
            </datawriter_qos>
            <datareader_qos>
                <!-- KEEP_ALL history: don't drop any responses -->
            </datareader_qos>
        </qos_profile>


        <!-- Event -->
        <qos_profile name="Event"
            base_name="BuiltinQosLibExp::Pattern.Event">
            <!-- may BLOCK writer for ReliabilityQosPolicy::max_blocking_time -->
        </qos_profile>

    </qos_library>
</dds>

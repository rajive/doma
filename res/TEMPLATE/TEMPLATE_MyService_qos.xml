<?xml version="1.0" encoding="utf-8" ?>
<!--
*****************************************************************************
*    (c) 2005-2018 Copyright, Real-Time Innovations, All rights reserved.   *
*                                                                           *
*         Permission to modify and use for internal purposes granted.       *
* This software is provided "as is", without warranty, express or implied.  *
*                                                                           *
*****************************************************************************
-->
<!-- ======================================================================= 
	                   === MyService Service QoS Profiles === 
	 ======================================================================= 
	 
RTI Connext DDS User QoS Profiles Service specific qos profiles. 

- Define service specific qos policies to each topic using topic filters. 
  - Specialize generic qos policies defined elsewhere.
- Define module interface specific qos profiles
  - at least one per module interface
  - additional variants, as needed (e.g. for ownership strength etc.)
	
Author: Rajive Joshi, Real-Time Innovations Inc. Copyright (C) 2018. 
-->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/latest/rti_dds_qos_profiles.xsd">

    <qos_library name="MyServiceQosLib">

        <qos_profile name="Root"> 

            <!-- Note: policies inherit from this qos profile's base_name, unless 
				another base_name is used to override -->
            <datareader_qos topic_filter="MyTopic*">
                <ownership>
                    <kind>EXCLUSIVE_OWNERSHIP_QOS</kind>
                </ownership>
            </datareader_qos>

            <!-- Override by specifying a different qos profile via base_name -->
            <datawriter_qos topic_filter="MyTopic*" base_name="EndpointQosLib::User.Pattern.LastValueCache">
                <ownership>
                    <kind>EXCLUSIVE_OWNERSHIP_QOS</kind>
                </ownership>
            </datawriter_qos>

             <!-- Catch all -->
            <datareader_qos topic_filter="*" base_name="EndpointQosLib::User.Pattern.Status" />
            <datawriter_qos topic_filter="*" base_name="EndpointQosLib::User.Pattern.Status" />

        </qos_profile>


        <qos_profile name="InterfaceX" base_name="Root">

            <subscriber_qos>
                <partition>
                    <name>
                        <element></element>
                        <element>starwars</element>
                        <element>startrek</element>
                        <element>funny</element>
                        <element>*</element>
                    </name>
                </partition>
            </subscriber_qos>

            <publisher_qos>
                <partition>
                    <name>
                        <element></element>
                        <element>starwars</element>
                        <element>startrek</element>
                        <element>funny</element>
                        <element>*</element>
                    </name>
                </partition>
            </publisher_qos>

        </qos_profile>


        <qos_profile name="InterfaceX.Strength.High" base_name="InterfaceX">
            <datawriter_qos topic_filter="MyTopic*">
                <ownership_strength>
                    <value>10</value>
                </ownership_strength>
            </datawriter_qos>
        </qos_profile>


        <qos_profile name="InterfaceX.Strength.Low" base_name="InterfaceX">
            <datawriter_qos topic_filter="MyTopic*">
                <ownership_strength>
                    <value>1</value>
                </ownership_strength>
            </datawriter_qos>
        </qos_profile>

    </qos_library>
</dds>
